apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "security-sample-chart.fullname" . }}
  labels:
    {{- include "security-sample-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "security-sample-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        rollme: {{ randAlphaNum 10 | quote }}
        {{- include "security-sample-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "security-sample-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-pg
          image: "{{ .Values.initContainer.image }}"
          imagePullPolicy: {{ .Values.initContainer.pullPolicy }}
          command:
          - 'sh'
          - '-c'
          - >
            echo "Waiting for Postgres to come up...";
            until nc -z -w 2 {{ .Release.Name }}-postgresql 5432 && echo database ok; do
              sleep 2;
            done;
            sleep 10;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "security-sample-chart.fullname" . }}-database
                key: postgresql-user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "security-sample-chart.fullname" . }}-database
                key: postgresql-password
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ include "security-sample-chart.fullname" . }}-database
                key: postgresql-db
          - name: DATABASE_HOST
            value: {{ .Release.Name }}-postgresql
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
